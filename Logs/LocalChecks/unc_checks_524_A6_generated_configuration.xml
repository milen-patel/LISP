	<module name="ClassDefined">
		<property name="severity" value="info"/>
		<property name="expectedTypes" value="
			@StringFormattingSExpression,
			@CustomOperationRegisterer+@StatefulOperationRegisterer,
			@LTEEvaluator,
			@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator,
			@NestedLexicalEnvironment,
			@GTEEvaluator,
			@NotEvaluator,
			@ListEvaluator,
			@AndEvaluator,
			@BasicFuncallEvaluator,
			@LTEvaluator,
			@FunctionEvaluator,
			@IdentifierAtomWithLookup,
			@LoadEvaluator,
			@GTEvaluator,
			@SetqEvaluator,
			@Main,
			@LambdaEvaluator,
			@CondEvaluator,
			@LetEvaluator,
			@EvalEvaluator,
			@QuoteEvaluator,
			@OrEvaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@SetqEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@SetqEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@SetqEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@SetqEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@SetqEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			@NestedLexicalEnvironment!assign:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@SetqEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			@NestedLexicalEnvironment!assign:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@FunctionEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@FunctionEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@FunctionEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@FunctionEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@FunctionEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:*->.*,
			main.lisp.evaluator.function.LambdaFactory!newInstance:*->.*,
			main.lisp.evaluator.function.FunctionFactory!newInstance:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@FunctionEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:*->.*,
			main.lisp.evaluator.function.LambdaFactory!newInstance:*->.*,
			main.lisp.evaluator.function.FunctionFactory!newInstance:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			process:int;java.util.Stack;main.lisp.parser.terms.SExpression->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			process:int;java.util.Stack;main.lisp.parser.terms.SExpression->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			java.util.Stack!pop:->Object,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			java.util.Stack!push:Object->Object,
			main.lisp.parser.terms.ExpressionFactory!newInstance:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			java.util.Stack!pop:->Object,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			java.util.Stack!push:Object->Object,
			main.lisp.parser.terms.ExpressionFactory!newInstance:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@BasicFuncallEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@BasicFuncallEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@BasicFuncallEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@BasicFuncallEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@BasicFuncallEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@BasicFuncallEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedGetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedProperties" value="
			OperatorString:String,
		"/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSetters">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedProperties" value=""/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			checkInput:main.lisp.parser.terms.SExpression->.*,
			comparator:double;double->boolean,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.DecimalAtom!getValue:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LambdaEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LambdaEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LambdaEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LambdaEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LambdaEvaluator"/>
		<property name="expectedCalls" value="
			java.util.Vector!add:*->.*,
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.evaluator.function.LambdaFactory!newInstance:*->.*,
			java.util.List!size:->int,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			java.util.List!toArray:Object[]->Object[],
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LambdaEvaluator"/>
		<property name="expectedCalls" value="
			java.util.Vector!add:*->.*,
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.evaluator.function.LambdaFactory!newInstance:*->.*,
			java.util.List!size:->int,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			java.util.List!toArray:Object[]->Object[],
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@IdentifierAtomWithLookup"/>
		<property name="expectedSuperTypes" value="
			main.lisp.parser.terms.IdentifierAtom,
			main.lisp.parser.terms.AbstractAtom,
			main.lisp.parser.terms.AbstractSExpression,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@IdentifierAtomWithLookup"/>
		<property name="expectedSuperTypes" value="
			main.lisp.parser.terms.IdentifierAtom,
			main.lisp.parser.terms.AbstractAtom,
			main.lisp.parser.terms.AbstractSExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@IdentifierAtomWithLookup"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@IdentifierAtomWithLookup"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@IdentifierAtomWithLookup"/>
		<property name="expectedCalls" value="
			java.util.Optional!get:->Object,
			main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,
			java.util.Optional!isPresent:->boolean,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@IdentifierAtomWithLookup"/>
		<property name="expectedCalls" value="
			java.util.Optional!get:->Object,
			main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,
			java.util.Optional!isPresent:->boolean,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LetEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LetEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LetEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			handleDeclarations:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;main.lisp.evaluator.Environment->void,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LetEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			handleDeclarations:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;main.lisp.evaluator.Environment->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LetEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.evaluator.Environment!newChild:->Environment,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			@NestedLexicalEnvironment!assign:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LetEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:*->.*,
			main.lisp.evaluator.Environment!newChild:->Environment,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			@NestedLexicalEnvironment!assign:*->.*,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NestedLexicalEnvironment"/>
		<property name="expectedSuperTypes" value="
			main.lisp.evaluator.environment.AbstractEnvironment,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NestedLexicalEnvironment"/>
		<property name="expectedSuperTypes" value="
			main.lisp.evaluator.environment.AbstractEnvironment,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NestedLexicalEnvironment"/>
		<property name="expectedSignatures" value="
			lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,
			assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,
			copy:->main.lisp.evaluator.Environment,
			lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,
			assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,
			newChild:->main.lisp.evaluator.Environment,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NestedLexicalEnvironment"/>
		<property name="expectedSignatures" value="
			lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,
			assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,
			copy:->main.lisp.evaluator.Environment,
			lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,
			assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,
			newChild:->main.lisp.evaluator.Environment,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NestedLexicalEnvironment"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.environment.AbstractEnvironment!getFun:main.lisp.parser.terms.IdentifierAtom->Optional,
			main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,
			main.lisp.evaluator.environment.AbstractEnvironment!putFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,
			java.util.Optional!isPresent:->boolean,
			main.lisp.evaluator.environment.AbstractEnvironment!get:main.lisp.parser.terms.IdentifierAtom->Optional,
			main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,
			main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NestedLexicalEnvironment"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.environment.AbstractEnvironment!getFun:main.lisp.parser.terms.IdentifierAtom->Optional,
			main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,
			main.lisp.evaluator.environment.AbstractEnvironment!putFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,
			java.util.Optional!isPresent:->boolean,
			main.lisp.evaluator.environment.AbstractEnvironment!get:main.lisp.parser.terms.IdentifierAtom->Optional,
			main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,
			main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedSignatures" value="
			main:String[]->void,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedSignatures" value="
			main:String[]->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedCalls" value="
			@CustomOperationRegisterer+@StatefulOperationRegisterer!registerAll:->void,
			main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,
			main.Main!main:String[]->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedCalls" value="
			@CustomOperationRegisterer+@StatefulOperationRegisterer!registerAll:->void,
			main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,
			main.Main!main:String[]->void,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer+@StatefulOperationRegisterer"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.OperationRegisterer,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer+@StatefulOperationRegisterer"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.OperationRegisterer,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer+@StatefulOperationRegisterer"/>
		<property name="expectedSignatures" value="
			registerAll:->void,
			registerOperations:->void,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer+@StatefulOperationRegisterer"/>
		<property name="expectedSignatures" value="
			registerAll:->void,
			registerOperations:->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer+@StatefulOperationRegisterer"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluatorIfNew:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer+@StatefulOperationRegisterer"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluatorIfNew:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedCalls" value="
			java.io.PrintStream!println:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.StringAtom!getValue:*->.*,
			main!newInput:*->.*,
			java.nio.file.Files!readAllLines:java.nio.file.Path->List,
			main.lisp.interpreter.InterpreterModelSingleton!get:->.*,
			java.nio.file.Paths!get:java.net.URI->Path,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedCalls" value="
			java.io.PrintStream!println:*->.*,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->TAtom,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.StringAtom!getValue:*->.*,
			main!newInput:*->.*,
			java.nio.file.Files!readAllLines:java.nio.file.Path->List,
			main.lisp.interpreter.InterpreterModelSingleton!get:->.*,
			java.nio.file.Paths!get:java.net.URI->Path,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedInterfaces" value="
			main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedInterfaces" value="
			main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSuperTypes" value="
			main.lisp.parser.terms.BasicExpression,
			main.lisp.parser.terms.AbstractSExpression,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSuperTypes" value="
			main.lisp.parser.terms.BasicExpression,
			main.lisp.parser.terms.AbstractSExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSignatures" value="
			isList:->boolean,
			toString:->String,
			toStringAsList:->String,
			toStringAsSExpression:->String,
			toStringAsSExpressionDeep:->String,
			toStringAsListHelper:->String,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSignatures" value="
			isList:->boolean,
			toString:->String,
			toStringAsList:->String,
			toStringAsSExpression:->String,
			toStringAsSExpressionDeep:->String,
			toStringAsListHelper:->String,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.AbstractSExpression!isAtom:->boolean,
			main.lisp.parser.terms.BasicExpression!getHead:->SExpression,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.BasicExpression!getTail:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.AbstractSExpression!isAtom:->boolean,
			main.lisp.parser.terms.BasicExpression!getHead:->SExpression,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.BasicExpression!getTail:->SExpression,
		"/>
	</module>

Caller Type,Caller Type Words,Caller Tag,Caller Tag Words,Caller Method,Caller Method Words,Caller Super Types,Calling Super Types Words,Called  Type,Called Type Words,Called  Tagged Type,Called Tagged Type Words,Called Method,Called Method Words
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
mainPackage.Logical.NotEval,not,@NotEvaluator,not,eval,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,assign,assign
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.FunctionFactory,function:factory,main.lisp.evaluator.function.FunctionFactory,function:factory,newInstance,new:instance
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.BasicLambda,basic:lambda,main.lisp.evaluator.function.BasicLambda,basic:lambda,BasicLambda,basic:lambda
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,newInstance,new:instance
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.Stack,stack,java.util.Stack,stack,Stack,stack
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.Stack,stack,java.util.Stack,stack,push,push
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,process,process
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,process,process,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,process,process,Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.Stack,stack,java.util.Stack,stack,pop,pop
mainPackage.Expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Grader,grader,Grader,grader,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,util.trace.Tracer,tracer,util.trace.Tracer,tracer,showInfo,show:info
mainPackage.Grader,grader,Grader,grader,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setBufferTracedMessages,set:buffer:traced:messages
mainPackage.Grader,grader,Grader,grader,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setTracerShowInfo,set:tracer:show:info
mainPackage.Grader,grader,Grader,grader,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.LispInterpreterTraceUtility,lisp:interpreter:trace:utility,main.LispInterpreterTraceUtility,lisp:interpreter:trace:utility,setTracing,set:tracing
mainPackage.Grader,grader,Grader,grader,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,setClass,set:class
mainPackage.Grader,grader,Grader,grader,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,gradingTools.comp524f21.assignment6.F21Assignment6Suite,assignment:suite,gradingTools.comp524f21.assignment6.F21Assignment6Suite,assignment:suite,main,main
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.Logical.AndEval,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Logical.OrEval,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.LambdaApplicationEvaluator,lambda:application,LambdaApplicationEvaluator,lambda:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,eval,none
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtom,atom,main.lisp.parser.terms.TAtom,atom,TAtom,atom
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtom,atom,main.lisp.parser.terms.TAtom,atom,TAtom,atom
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,RuntimeException,exception,java.lang.RuntimeException,exception,RuntimeException,exception
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,helper,helper
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,addNonCurriedArgs,add:non:curried:args,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,addCurriedArgs,add:curried:args,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,size,size
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,addCurriedArgs,add:curried:args,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,get,get
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.ArrayList,array:list,java.util.ArrayList,array:list,ArrayList,array:list
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,add,add
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,size,size
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,BetterSExpression,better:expression
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,IdentifierAtom,identifier:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,IdentifierAtom,identifier:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,BetterSExpression,better:expression
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,size,size
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,prependList,list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,BetterSExpression,better:expression
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,quoteSExpression,quote:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,BetterSExpression,better:expression
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,quoteSExpression,quote:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.IdentifierAtomImplementation,identifier:atom:implementation,@IdentifierAtomWithLookup,identifier:atom:with,IdentifierAtomImplementation,identifier:atom:implementation
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,quoteSExpression,quote:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,BetterSExpression,better:expression
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,quoteSExpression,quote:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,makeList,make:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,makeList,make:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,size,size
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,makeList,make:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,BetterSExpression,better:expression
mainPackage.CurryEvaluator,curry,CurryEvaluator,curry,makeList,make:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,java.util.List,list,java.util.List,list,get,get
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,checkInput,check:input,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,checkInput,check:input,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,checkInput,check:input,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,checkInput,check:input,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,checkInput,check:input,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,IllegalStateException,illegal:state:exception,java.lang.IllegalStateException,illegal:state:exception,IllegalStateException,illegal:state:exception
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
mainPackage.AbstractComparisonEvaluator,abstract:comparison,AbstractComparisonEvaluator,abstract:comparison,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator,gte:lt,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,RuntimeException,exception,java.lang.RuntimeException,exception,RuntimeException,exception
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,java.util.ArrayList,array:list,java.util.ArrayList,array:list,ArrayList,array:list
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,RuntimeException,exception,java.lang.RuntimeException,exception,RuntimeException,exception
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,add,add
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,java.util.List,list,java.util.List,list,toArray,to:array
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,java.util.List,list,java.util.List,list,size,size
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator,gte:lt,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.IdentifierAtomImplementation,identifier:atom:implementation,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,lookup,none
mainPackage.IdentifierAtomImplementation,identifier:atom:implementation,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,isPresent,is:present
mainPackage.IdentifierAtomImplementation,identifier:atom:implementation,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
mainPackage.IdentifierAtomImplementation,identifier:atom:implementation,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression,RuntimeException,exception,java.lang.RuntimeException,exception,RuntimeException,exception
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,assign,assign
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.LetEvaluator,let,@LetEvaluator,let,handleDeclarations,handle:declarations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getEnvironment,get:environment
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getArgumentNames,get:argument:names
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getLambda,get:lambda
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,eval,none
mainPackage.FunctionApplicationEvaluator,function:application,FunctionApplicationEvaluator,function:application,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getLambda,get:lambda
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,equalsIgnoreCase,equals:ignore:case
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,toString,to:string
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
mainPackage.GeneralExpressionEvaluator,general:expression,GeneralExpressionEvaluator,general:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assign,assign,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,put,put
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assign,assign,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assignFun,assign:fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,putFun,put:fun
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assignFun,assign:fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,isPresent,is:present
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,isPresent,is:present
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getFun,get:fun
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getFun,get:fun
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getFun,get:fun
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getScope,get:scope
mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,newChild,new:child,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,EnvironmentImplementation,environment:implementation
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,setClass,set:class
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerAll,register:all
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,OperatorRegistry,operator:registry
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.environment.EnvironmentFactory,environment:factory,main.lisp.evaluator.environment.EnvironmentFactory,environment:factory,setClass,set:class
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,setClass,set:class
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,setClass,set:class
mainPackage.Runner,runner,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment,main.Main,main,main.Main,main,main,main
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerAll,register:all,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluator,register
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Relational.LessThanEvaluator,less:than,@LTEvaluator,lt,LessThanEvaluator,less:than
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Relational.LessThanOrEqualToEvaluator,less:than:or:equal:to,@LTEEvaluator,none,LessThanOrEqualToEvaluator,less:than:or:equal:to
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,GreaterThanEvaluator,greater:than
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Relational.GreaterThanOrEqualToEvaluator,greater:than:or:equal:to,@GTEEvaluator,gte,GreaterThanOrEqualToEvaluator,greater:than:or:equal:to
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,LoadEvaluator,load
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Logical.AndEval,and,@AndEvaluator,and,AndEval,and
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Expression.ListEvaluator,list,@ListEvaluator,list,ListEvaluator,list
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,QuoteEvaluator,quote
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Expression.EvalEvaluator,none,@EvalEvaluator,none,EvalEvaluator,none
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Logical.OrEval,or,@OrEvaluator,or,OrEval,or
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Logical.NotEval,not,@NotEvaluator,not,NotEval,not
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Expression.CondEvaluator,none,@CondEvaluator,none,CondEvaluator,none
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Functional.SetqEvaluator,none,@SetqEvaluator,none,SetqEvaluator,none
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,LambdaEvaluator,lambda
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.Functional.FuncallEvaluator,none,@BasicFuncallEvaluator,basic,FuncallEvaluator,none
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.FunctionEvaluator,function,@FunctionEvaluator,function,FunctionEvaluator,function
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,mainPackage.LetEvaluator,let,@LetEvaluator,let,LetEvaluator,let
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
mainPackage.OperatorRegistry,operator:registry,@CustomOperationRegisterer+@StatefulOperationRegisterer,custom:operation:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,RuntimeException,exception,java.lang.RuntimeException,exception,RuntimeException,exception
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,RuntimeException,exception,java.lang.RuntimeException,exception,RuntimeException,exception
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.StringAtom,string:atom,main.lisp.parser.terms.StringAtom,string:atom,getValue,get:value
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,String,string,java.lang.String,string,replace,replace
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,java.nio.file.Paths,paths,java.nio.file.Paths,paths,get,get
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,java.nio.file.Files,files,java.nio.file.Files,files,readAllLines,read:all:lines
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,java.io.PrintStream,print:stream,java.io.PrintStream,print:stream,println,none
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,$main,none,main,main,newInput,new:input
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,get,get
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.Expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isAtom,is:atom
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isListHelper,is:list:helper
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isListHelper,is:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isListHelper,is:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isListHelper,is:list:helper
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isListHelper,is:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,String,string,java.lang.String,string,length,length
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,String,string,java.lang.String,string,charAt,char:at
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,String,string,java.lang.String,string,substring,none
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isAtom,is:atom
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,String,string,java.lang.String,string,contains,contains
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelper,to:string:as:list:helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,String,string,java.lang.String,string,contains,contains
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,isList,is:list
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list
mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:AbstractEnvironment:@CustomOperationRegisterer+@StatefulOperationRegisterer:OperationRegisterer:Evaluator:BasicExpression:AbstractSExpression:SExpression,gte:lt:identifier:atom:abstract:atom:abstract:expression:basic:expression:abstract:environment:custom:operation:operation:operation:basic:expression:abstract:expression:expression,mainPackage.BetterSExpression,better:expression,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
